"""
Задача - Реализация очереди задач на основе базы данных
Описание:
Ваша задача — реализовать очередь задач, которая хранится в базе данных. Система должна
позволять различным рабочим процессам (воркерами) безопасно брать задачи из очереди и
обрабатывать их, гарантируя, что каждая задача будет взята и выполнена только одним
процессом. Для этого необходимо использовать механизм транзакций с SELECT FOR UPDATE,
чтобы избежать ситуаций, когда несколько процессов одновременно пытаются обработать
одну и ту же задачу. Самостоятельно ознакомьтесь с командой SKIP LOCKED которая может
использоваться вместе с FOR UPDATE.

Требования:
Таблица задач должна содержать следующие поля:
id — уникальный идентификатор задачи.
task_name — имя или описание задачи.
status — статус задачи (например, pending, processing, completed).
worker_id — ID воркера, который обрабатывает задачу (null, если задача еще не взята).
created_at — дата создания задачи.
updated_at — дата обновления задачи.

Необходимо написать функцию fetch_task(worker_id), которая находит задачу со
статусом pending, блокирует её с помощью SELECT FOR UPDATE, обновляет статус задачи
на processing, и назначает её текущему рабочему процессу.

Написать логику для выполнения задачи рабочим процессом, который берет задачу, выполняет
её и изменяет статус задачи на completed.
"""
# Решение в module11 в Django проекте, приложение 'queque_task'.
